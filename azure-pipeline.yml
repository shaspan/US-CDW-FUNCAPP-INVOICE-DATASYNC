# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
name: Azure Functions  Build - US-CDW-FUNCAPP-SAMPLE

parameters:
  - name: to_dev
    displayName: 'Deploy to Dev [dev]'
    type: boolean
    default: false

  - name: to_qa
    displayName: 'Deploy to QA [qa]'
    type: boolean
    default: false

trigger:
  - features/*
  - main
  - hotfix/*
  - develop

pool:
  name: 'aks-npd-azdo-self-hosted-agents'

resources:
  repositories:
    - repository: templates
      type: github
      name: cdwcorp/pipeline-templates
      endpoint: cdwcorp
      ref: features/functionapp_template

stages:
  - template: pipelines/functionapp/build.yml@templates
    parameters:
      buildCmd:
        - buildcmd01: dotnet publish Cdw.Azure.Function.Sample.sln --output ./publish /p:PackageAsSingleFile=true
      testCmd:
        - testcmd01: dotnet test $(System.DefaultWorkingDirectory)/Cdw.Azure.Function.Sample.sln --collect "XPlat Code Coverage" --filter "Category=CI" --results-directory $(Agent.TempDirectory)
      runSonar: true
      runNexusIQ: true
      codeCoverage: true
      coverageThreshold: 0

  - stage: DeployDev_Stage
    displayName: 'Deploy Development'
    condition: and(not(failed()),not(canceled()),${{parameters.to_dev}})
    dependsOn: Build
    jobs:
      - template: pipelines/functionapp/deploy.yml@templates
        parameters:
          environment : Development
          appDeploy: ${{ parameters.to_dev }}

  - stage: DeployQa_Stage
    displayName: 'Deploy QA'
    condition: and(not(failed()),not(canceled()),${{parameters.to_dev}},${{parameters.to_qa}})
    dependsOn: DeployDev_Stage
    jobs:
      - template: pipelines/functionapp/deploy.yml@templates
        parameters:
          environment : QA
          appDeploy: ${{ parameters.to_qa }}
